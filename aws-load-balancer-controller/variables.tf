variable "alb_access_logs" {
  default     = null
  description = "An optional object whose attributes are used to enable and configure ALB access log storage in an existing S3 bucket.  The values are applied to every IngressClassParams object created by the module."
  type = object({
    bucket_name   = string
    bucket_prefix = optional(string, "alb")
    enabled       = optional(bool, true)
  })

  validation {
    condition     = try(!endswith(var.alb_access_logs.bucket_prefix, "/"), var.alb_access_logs == null)
    error_message = "The bucket_prefix attribute cannot end with a slash."
  }

  validation {
    condition     = try(!startswith(var.alb_access_logs.bucket_prefix, "/"), var.alb_access_logs == null)
    error_message = "The bucket_prefix attribute cannot start with a slash."
  }

  validation {
    condition     = try(can(regex("^[a-z0-9][a-z0-9\\-.]{1,61}[a-z0-9]$", var.alb_access_logs.bucket_name)), var.alb_access_logs == null)
    error_message = "The bucket_name attribute cannot be null and must adhere to the S3 bucket naming rules.  https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html"
  }
}

variable "chart_version" {
  description = "The version of the 'aws-load-balancer-controller' Helm chart to use.  See https://github.com/aws/eks-charts/tree/master/stable/aws-load-balancer-controller for the list of valid versions."
  nullable    = false
  type        = string
  validation {
    condition     = can(regex("^1\\.[56]\\.\\d+$", var.chart_version))
    error_message = "The chart version must be 1.5.x or 1.6.x where 'x' is a positive integer.."
  }
}

variable "eks_cluster" {
  description = <<-EOF
  Attributes of the EKS cluster on which the controller is deployed.  The names of the attributes match the names of outputs in the eks-cluster module to allow using the module as the argument to this variable.

  The `cluster_name` attribute the the name of the EKS cluster.  It is required.
  The `cluster_security_group_id` is the ID of the security group generated by EKS when the cluster was created.  It is required.
  The `service_account_oidc_audience_variable` attribute is the ID of the cluster's IAM OIDC identity provider with the string ":aud" appended to it.  It is required.
  The `service_account_oidc_subject_variable` attribute is the ID of the cluster's IAM OIDC identity provider with the string ":sub" appended to it.  It is required.
  The 'service_account_oidc_provider_arn' attribute is the ARN of the cluster's IAM OIDC identity provider.  It is required.
  EOF
  nullable    = false
  type = object({
    cluster_name                           = string
    cluster_security_group_id              = string
    service_account_oidc_audience_variable = string
    service_account_oidc_subject_variable  = string
    service_account_oidc_provider_arn      = string
  })

  validation {
    # The naming constraints are defined at https://docs.aws.amazon.com/eks/latest/APIReference/API_CreateCluster.html#API_CreateCluster_RequestBody
    condition     = can(regex("^[0-9A-Za-z][A-Za-z0-9\\-_]{0,99}$", var.eks_cluster.cluster_name))
    error_message = "The cluster name must adhere to the EKS cluster name restrictions."
  }

  validation {
    condition     = endswith(var.eks_cluster.service_account_oidc_audience_variable, ":aud")
    error_message = "The service_account_oidc_audience_variable attribute must have the ':aud' suffix."
  }

  validation {
    condition     = endswith(var.eks_cluster.service_account_oidc_subject_variable, ":sub")
    error_message = "The service_account_oidc_subject_variable attribute must have the ':sub' suffix."
  }

  validation {
    condition     = can(regex("^sg-[a-f0-9]+$", var.eks_cluster.cluster_security_group_id))
    error_message = "The cluster_security_group_id attribute is not a syntactically valid security group ID."
  }

  validation {
    condition     = var.eks_cluster.service_account_oidc_provider_arn != null
    error_message = "The service_account_oidc_provider_arn attribute cannot be null."
  }
}

variable "default_aws_resource_tags" {
  default     = {}
  description = "An optional map of AWS tags to attach to every AWS resource created by the controller."
  nullable    = false
  type        = map(string)
}

variable "default_tls_security_policy" {
  default     = "ELBSecurityPolicy-FS-1-2-Res-2020-10"
  description = <<-EOF
  The default ALB TLS (SSL) security policy to use for HTTPS listeners.  It must be valid for both ALBs and NLBs.
  The available ALB policies are listed at https://docs.aws.amazon.com/elasticloadbalancing/latest/application/create-https-listener.html#describe-ssl-policies.
  The available NLB policies are listed at https://docs.aws.amazon.com/elasticloadbalancing/latest/network/create-tls-listener.html#describe-ssl-policies
  EOF
  nullable    = false
  type        = string

  validation {
    condition     = startswith(var.default_tls_security_policy, "ELBSecurityPolicy-")
    error_message = "The TLS security policy name must start with `ELBSecurityPolicy-`."
  }
}

variable "enabled_features" {
  default     = ["wafv2"]
  description = <<-EOF
  "Enable support for optional features.  Specify 'serviceMutatorWebhook' to make this controller
  the default for all new LoadBalancer services, 'shield' for AWS Shield, 'waf' for AWS WAFv1, and/or 'wafv2' for AWS WAFv2.  Defaults to 'wafv2'."
  EOF
  nullable    = false
  type        = set(string)
  validation {
    condition     = length(setsubtract(var.enabled_features, ["waf", "wafv2", "shield", "serviceMutatorWebhook"])) == 0
    error_message = "Invalid value specified in the 'enabled_features' variable.  Valid values are 'serviceMutatorWebhook', 'shield', 'waf', and 'wafv2'."
  }
}

variable "externally_managed_tag_keys" {
  default     = []
  description = "AWS Tag keys that will be managed externally. Specified Tags are ignored during reconciliation."
  nullable    = false
  type        = list(string)
}

variable "internal_ingress_class_parameters" {
  default     = {}
  description = <<-EOF
  Configures IngressClassParams resource assigned to the `internal-application-load-balancer` IngressClass resource managed by the module.  The class is used to create internal application load balancers.
  The variable allows for configuration of the inboundCIDRs, namespaceSelector, tags, and selected attributes of the loadBalancerAttributes parameters.  The classes scheme paramter is set to internet-facing.
  **Due to naming limitations of object attributes in Terraform type definitions, the dots in the attribute names must be replaced with dashes.**
  For more details on the parameters see https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.4/guide/ingress/ingress_class/#ingressclassparams-specification
  EOF
  nullable    = false
  type = object({
    inbound_cidrs = optional(list(string), [])
    load_balancer_attributes = optional(
      object({
        idle_timeout-timeout_seconds                             = optional(number, 60)
        routing-http-desync_mitigation_mode                      = optional(string, "strictest")
        routing-http-drop_invalid_header_fields-enabled          = optional(bool, true)
        routing-http-preserve_host_header-enabled                = optional(bool, false)
        routing-http-x_amzn_tls_version_and_cipher_suite-enabled = optional(bool, false)
        routing-http-xff_client_port-enabled                     = optional(bool, false)
        routing-http-xff_header_processing-mode                  = optional(string, "remove")
        waf-fail_open-enabled                                    = optional(bool, false)
      }),
    {})
    namespace_selector = optional(
      object({
        match_expressions = optional(list(
          object({
            key      = string
            operator = string
            values   = optional(list(string), [])
          })
          ),
        [])
        match_labels = optional(map(string), {})
      }),
    {})
    tags = optional(map(string), {})
  })

  validation {
    condition     = contains(["append", "preserve", "remove"], var.internal_ingress_class_parameters.load_balancer_attributes["routing-http-xff_header_processing-mode"])
    error_message = "The 'routing-http-xff_header_processing-mode' load balancer attribute must be one of append, preserve, or remove."
  }

  validation {
    condition     = contains(["monitor", "defensive", "strictest"], var.internal_ingress_class_parameters.load_balancer_attributes["routing-http-desync_mitigation_mode"])
    error_message = "The 'routing-http-desync_mitigation_mode' load balancer attribute must be one of monitor, defensive, or strictest.  See https://docs.aws.amazon.com/elasticloadbalancing/latest/application/application-load-balancers.html#desync-mitigation-mode for more details."
  }

  validation {
    condition     = 1 <= var.internal_ingress_class_parameters.load_balancer_attributes["idle_timeout-timeout_seconds"] && var.internal_ingress_class_parameters.load_balancer_attributes["idle_timeout-timeout_seconds"] <= 4000
    error_message = "The 'idle_timeout-timeout_seconds' load balancer attribute must be greater than zero and less than or equal to 4000.  See https://docs.aws.amazon.com/elasticloadbalancing/latest/application/application-load-balancers.html#connection-idle-timeout for more details."
  }

  validation {
    condition     = alltrue([for operator in var.internal_ingress_class_parameters.namespace_selector.match_expressions[*].operator : contains(["In", "NotIn", "Exists", "DoesNotExist"], operator)])
    error_message = "Match expression operators must be one of In, NotIn, Exists or DoesNotExist."
  }

  validation {
    condition     = alltrue([for expr in var.internal_ingress_class_parameters.namespace_selector.match_expressions : length(expr.values) == 0 if contains(["Exists", "DoesNotExist", ], expr.operator)])
    error_message = "The values array in a match expression must be empty if the expression's operator is either Exists or DoesNotExist."
  }
}


variable "internet_facing_ingress_class_parameters" {
  default     = {}
  description = <<-EOF
  Configures IngressClassParams resource assigned to the `internet-facing-application-load-balancer` IngressClass resource managed by the module.  The class is used to create internet-facing application load balancers.
  The variable allows for configuration of the namespaceSelector, tags, and selected attributes of the loadBalancerAttributes parameters.  The classes scheme paramter is set to internet-facing.
  For more details on the parameters see https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.4/guide/ingress/ingress_class/#ingressclassparams-specification
  EOF
  nullable    = false
  type = object({
    load_balancer_attributes = optional(
      object({
        idle_timeout-timeout_seconds                             = optional(number, 60)
        routing-http-desync_mitigation_mode                      = optional(string, "strictest")
        routing-http-drop_invalid_header_fields-enabled          = optional(bool, true)
        routing-http-preserve_host_header-enabled                = optional(bool, false)
        routing-http-x_amzn_tls_version_and_cipher_suite-enabled = optional(bool, false)
        routing-http-xff_client_port-enabled                     = optional(bool, false)
        routing-http-xff_header_processing-mode                  = optional(string, "remove")
        waf-fail_open-enabled                                    = optional(bool, false)
      }),
    {})
    namespace_selector = optional(
      object({
        match_expressions = optional(list(
          object({
            key      = string
            operator = optional(string, "In")
            values   = optional(list(string), [])
          })
          ),
        [])
        match_labels = optional(map(string), {})
      }),
    {})
    tags = optional(map(string), {})
  })

  validation {
    condition     = contains(["append", "preserve", "remove"], var.internet_facing_ingress_class_parameters.load_balancer_attributes["routing-http-xff_header_processing-mode"])
    error_message = "The 'routing-http-xff_header_processing-mode' load balancer attribute must be one of append, preserve, or remove."
  }

  validation {
    condition     = contains(["monitor", "defensive", "strictest"], var.internet_facing_ingress_class_parameters.load_balancer_attributes["routing-http-desync_mitigation_mode"])
    error_message = "The 'routing-http-desync_mitigation_mode' load balancer attribute must be one of monitor, defensive, or strictest.  See https://docs.aws.amazon.com/elasticloadbalancing/latest/application/application-load-balancers.html#desync-mitigation-mode for more details."
  }

  validation {
    condition     = 1 <= var.internet_facing_ingress_class_parameters.load_balancer_attributes["idle_timeout-timeout_seconds"] && var.internet_facing_ingress_class_parameters.load_balancer_attributes["idle_timeout-timeout_seconds"] <= 4000
    error_message = "The 'idle_timeout-timeout_seconds' load balancer attribute must be greater than zero and less than or equal to 4000.  See https://docs.aws.amazon.com/elasticloadbalancing/latest/application/application-load-balancers.html#connection-idle-timeout for more details."
  }

  validation {
    condition     = alltrue([for operator in var.internet_facing_ingress_class_parameters.namespace_selector.match_expressions[*].operator : contains(["In", "NotIn", "Exists", "DoesNotExist"], operator)])
    error_message = "Match expression operators must be one of In, NotIn, Exists or DoesNotExist."
  }

  validation {
    condition     = alltrue([for expr in var.internet_facing_ingress_class_parameters.namespace_selector.match_expressions : length(expr.values) == 0 if contains(["Exists", "DoesNotExist", ], expr.operator)])
    error_message = "The values array in a match expression must be empty if the expression's operator is either Exists or DoesNotExist."
  }
}

variable "labels" {
  default     = {}
  description = "An optional map of Kubernetes labels to attach to every resource created by the module."
  nullable    = false
  type        = map(string)

  validation {
    condition     = alltrue([for v in values(var.labels) : can(regex("^(?i)(([a-z0-9])|([a-z0-9]([a-z0-9\\-_.]){0,61}[a-z0-9]))?$", v))])
    error_message = "One or more label values is syntactically invalid or null.  See https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#syntax-and-character-set for details."
  }

  validation {
    condition     = alltrue([for k in keys(var.labels) : can(regex("^(?i)(([a-z0-9]/)|([a-z0-9][a-z0-9\\-.]{0,251}[a-z0-9])/)?(([a-z0-9])|([a-z0-9]([a-z0-9\\-_.]){0,61}[a-z0-9]))$", k))])
    error_message = "One or more label keys is syntactically invalid or null.  See https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#syntax-and-character-set for details."
  }
}

variable "log_level" {
  default     = "info"
  description = "Configures the log verbosity of the controller.  Must be one of debug or info."
  type        = string
  validation {
    condition     = contains(["debug", "info"], var.log_level)
    error_message = "The 'log_level' variable must be one of debug or info."
  }
}

variable "node_selector" {
  default     = {}
  description = "An optional map of node labels to use the node selector of all pods."
  type        = map(string)
  nullable    = false

  validation {
    condition     = alltrue([for v in values(var.node_selector) : can(regex("^(?i)(([a-z0-9])|([a-z0-9]([a-z0-9\\-_.]){0,61}[a-z0-9]))?$", v))])
    error_message = "One or more node selector values is syntactically invalid or null.  See https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/ for details."
  }

  validation {
    condition     = alltrue([for k in keys(var.node_selector) : can(regex("^(?i)(([a-z0-9]/)|([a-z0-9][a-z0-9\\-.]{0,251}[a-z0-9])/)?(([a-z0-9])|([a-z0-9]([a-z0-9\\-_.]){0,61}[a-z0-9]))$", k))])
    error_message = "One or more node selector keys is syntactically invalid or null.  See https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/ for details."
  }
}

variable "node_tolerations" {
  default     = []
  description = <<-EOF
  An optional list of objects to set node tolerations on all pods.  The object structure corresponds to the structure of the
  toleration syntax in the Kubernetes pod spec.

  https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
  EOF
  nullable    = false
  type = list(object(
    {
      key      = string
      operator = string
      value    = optional(string)
      effect   = string
    }
  ))

  validation {
    condition     = alltrue([for t in var.node_tolerations : contains(["NoExecute", "NoSchedule", "PreferNoSchedule", ""], t.effect)])
    error_message = "The toleration effects must be one of NoExecute, NoSchedule, PreferNoSchedule, or an empty string."
  }

  validation {
    condition     = alltrue([for t in var.node_tolerations : contains(["Equal", "Exists"], t.operator)])
    error_message = "The toleration operators must be either Equal or Exists."
  }

  validation {
    condition     = alltrue([for t in var.node_tolerations : t.value == null if t.operator == "Exists"])
    error_message = "The toleration value must be null if the operator is set to Exists."
  }

  validation {
    condition     = alltrue([for t in var.node_tolerations : can(regex("^(?i)(([a-z0-9])|([a-z0-9]([a-z0-9\\-_.]){0,61}[a-z0-9]))?$", t.value)) if t.operator == "Equal"])
    error_message = "If the operator is set to Equal, the toleration value cannot be null and must be a syntactically valid Kubernetes label value.  See https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#syntax-and-character-set for details."
  }

  validation {
    condition     = alltrue([for t in var.node_tolerations : can(regex("^(?i)(([a-z0-9]/)|([a-z0-9][a-z0-9\\-.]{0,251}[a-z0-9])/)?(([a-z0-9])|([a-z0-9]([a-z0-9\\-_.]){0,61}[a-z0-9]))$", t.key))])
    error_message = "Toleration keys cannot be null and must be syntactically valid Kubernetes label keys.  See https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#syntax-and-character-set for details."
  }

}

variable "pod_resources" {
  default     = {}
  description = "CPU and memory settings for the controller pods."
  nullable    = false
  type = object(
    {
      limits = optional(object(
        {
          cpu    = optional(string, "2000m")
          memory = optional(string, "512Mi")
        }
        ),
      {})
      requests = optional(
        object(
          {
            cpu    = optional(string, "500m")
            memory = optional(string, "256Mi")
          }
        ),
      {})
    }
  )
}

variable "namespace" {
  default     = "kube-system"
  description = "The namespace where the controller will be installed."
  nullable    = false
  type        = string

  validation {
    condition     = 0 < length(var.namespace) && length(var.namespace) < 64
    error_message = "The namespace variable must contain at least one character and at most 63 characters."
  }

  validation {
    condition     = can(regex("^[a-z0-9]([a-z0-9\\-]*[a-z0-9])*$", var.namespace))
    error_message = "The namespace variable must be a syntactically valid Kubernetes namespace. https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/#namespaces-and-dns"
  }
}

variable "replica_count" {
  default     = 2
  description = "The number of controller pods to run."
  nullable    = false
  type        = number
  validation {
    condition     = 0 <= var.replica_count
    error_message = "The 'replica_count' value must be greater than or equal to zero."
  }
}

variable "service_monitor" {
  default     = {}
  description = "Controls deployment and configuration of a ServiceMonitor custom resource to enable Prometheus metrics scraping.  The kube-prometheus-stack CRDs must be available in the k8s cluster if  `enabled` is set to `true`."
  nullable    = false
  type = object({
    enabled         = optional(bool, true)
    scrape_interval = optional(string, "30s")
  })

  validation {
    condition     = can(regex("^[1-9][0-9]*[hms]$", var.service_monitor.scrape_interval))
    error_message = "The service monitor scrape interval must be a non-zero duration string whose unit is h, m, or s.  https://prometheus-operator.dev/docs/operator/api/#monitoring.coreos.com/v1.Duration"
  }
}

variable "tags" {
  default     = {}
  description = "An optional map of AWS tags to attach to every resource created by the module."
  nullable    = false
  type        = map(string)
}

variable "vpc_id" {
  description = "The unique identifier of the VPC where the target EKS cluster is deployed."
  nullable    = false
  type        = string
}
