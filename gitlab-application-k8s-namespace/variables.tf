variable "additional_ci_cd_role_rules" {
  default     = []
  description = "A list of Kubernetes role rules allow Gitlab CI/CD jobs to manage additional resources beyond those defined by the module."
  nullable    = false
  type = list(object({
    api_groups     = optional(set(string), [""])
    resources      = optional(set(string), [])
    resource_names = optional(set(string), [])
    verbs          = set(string)
  }))
}

variable "application_iam_role" {
  default     = null
  description = <<-EOF
  When not null, the application's Kubernetes service account is annotated to enable IAM roles for service accounts.  The module
  generates the name for the role but IT DOES NOT create the role.  The role name is instead exposed in the outputs of the module.
  See https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts.html for more details.

  The account_id attribute is the numeric identifier of the AWS account of the IAM role.
  The cluster_name attribute is the name of the EKS cluster containing the resources managed by this module.
  The name attribute is an optional string that is used as the name of the role instead of the name generated by the module.
  The path attribute is an optional string to customize the path of the IAM role.  It must start and end with a `/` character.
  EOF
  nullable    = true
  type = object(
    {
      account_id   = string
      cluster_name = string
      name         = optional(string)
      path         = optional(string)
    }
  )

  validation {
    condition     = var.application_iam_role == null || can(regex("^[0-9]+$", var.application_iam_role.account_id))
    error_message = "The account ID must be a numeric string."
  }

  validation {
    condition     = var.application_iam_role == null || can(regex("^[0-9A-Za-z][A-Za-z0-9\\-_]{0,99}$", var.application_iam_role.cluster_name))
    error_message = "The cluster name must adhere to the EKS cluster name restrictions.  For details see https://docs.aws.amazon.com/eks/latest/APIReference/API_CreateCluster.html#API_CreateCluster_RequestBody."
  }

  validation {
    condition     = try(startswith(var.application_iam_role.path, "/"), var.application_iam_role.path == null, var.application_iam_role == null)
    error_message = "The path must start with a `/` character."
  }

  validation {
    condition     = try(endswith(var.application_iam_role.path, "/"), var.application_iam_role.path == null, var.application_iam_role == null)
    error_message = "The path must end with a `/` character."
  }
}

variable "project" {
  description = "The name of the Gitlab project, the name of the project's Gitlab group, and the unique numeric identifier of the group."
  nullable    = false
  type = object({
    id    = number
    name  = string
    group = string
  })

  validation {
    condition     = 0 <= var.project.id
    error_message = "The project ID must be greater than or equal to zero."
  }

  validation {
    condition     = can(regex("^[a-zA-Z0-9_][a-zA-Z0-9.+_\\- ]*$", var.project.name))
    error_message = "The project name must start with a lowercase or uppercase letter, digit, or underscore. Can also contain dots, pluses, dashes, or spaces."
  }

  validation {
    condition     = can(regex("^[a-zA-Z0-9_][a-zA-Z0-9_\\- .()]*$", var.project.group))
    error_message = "The project group must start with letter, digit, or underscore. Can also contain periods, dashes, spaces, and parentheses."
  }
}

variable "compute_quotas" {
  default     = {}
  description = <<-EOF
  Quotas to limit the total sum of compute resources that can be requested in the namespace.  All attributes are optional.
  For more details see https://kubernetes.io/docs/concepts/policy/resource-quotas/#compute-resource-quota
  EOF
  nullable    = false
  type = object(
    {
      limits = optional(
        object(
          {
            cpu    = optional(string)
            memory = optional(string)
          }
        ),
      {})
      requests = optional(
        object(
          {
            cpu    = optional(string)
            memory = optional(string)
          }
        ),
      {})
    }
  )
}

variable "enable_aws_loadbalancer_controller_pod_readiness_gate" {
  default     = true
  description = <<-EOF
  Determines if the AWS load balancer controller will inject a readiness gate in the pods created in the namespace.
  https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.4/deploy/pod_readiness_gate/
  EOF
  nullable    = false
  type        = bool
}

variable "enable_goldilocks" {
  default     = true
  description = <<-EOF
  Determines if Goldilocks monitors the namespace to give recommendations on tuning pod resource requests and limits.
  https://goldilocks.docs.fairwinds.com/installation/#enable-namespace
  EOF
  nullable    = false
  type        = bool
}

variable "default_container_resources" {
  default     = {}
  description = <<-EOF
  The default resource requests and limits for containers that don't specify any.  The values are used to configure the namespace's limit range.
  https://kubernetes.io/docs/concepts/policy/limit-range/
  EOF
  nullable    = false
  type = object(
    {
      limits = optional(
        object(
          {
            cpu               = optional(string, "250m")
            ephemeral-storage = optional(string, "8Gi")
            memory            = optional(string, "256Mi")
          }
        ),
      {})
      requests = optional(
        object(
          {
            cpu               = optional(string, "250m")
            ephemeral-storage = optional(string, "8Gi")
            memory            = optional(string, "256Mi")
          }
        ),
      {})
    }
  )
}

variable "pod_security_standards" {
  default     = {}
  description = <<-EOF
  Configures the levels of the pod security admission modes.

  https://kubernetes.io/docs/concepts/security/pod-security-admission/
  https://kubernetes.io/docs/tasks/configure-pod-container/enforce-standards-namespace-labels/
  https://kubernetes.io/docs/concepts/security/pod-security-standards/
  EOF
  nullable    = false
  type = object({
    audit   = optional(string, "restricted")
    enforce = optional(string, "baseline")
    warn    = optional(string, "restricted")
  })

  validation {
    condition     = alltrue([for v in values(var.pod_security_standards) : contains(["baseline", "privileged", "restricted"], v)])
    error_message = "One or more pod security standard levels are invalid.  Valid levels are baseline, privileged, or restricted."
  }
}

variable "maximum_limit_request_ratio" {
  default     = {}
  description = <<-EOF
  Specifies the maximum allowed ration between a resource request and its corresponding limit.  It this represents the max burst
  for the resource.  The default for all resource types caps the limit to twice the request.
  EOF
  nullable    = false
  type = object({
    cpu               = optional(number, 2)
    ephemeral-storage = optional(number, 2)
    memory            = optional(number, 2)
  })

  validation {
    condition     = alltrue([for ratio in values(var.maximum_limit_request_ratio) : 0 < ratio])
    error_message = "Ratios must be greater than or equal to 1."
  }

}

variable "maximum_pod_resources" {
  default     = {}
  description = "Specifies the maximum CPU and memory any one pod can use."
  nullable    = false
  type = object(
    {
      cpu    = optional(string, "2")
      memory = optional(string, "2Gi")
    }
  )
}

variable "metadata" {
  default     = {}
  description = "An optional object for specifying additional annotations and labels to add to the namespace resource."
  nullable    = false
  type = object({
    annotations = optional(map(string), {})
    labels      = optional(map(string), {})
  })


  validation {
    condition     = alltrue([for v in values(var.metadata.labels) : can(regex("^(?i)(([a-z0-9])|([a-z0-9]([a-z0-9\\-_.]){0,61}[a-z0-9]))?$", v))])
    error_message = "One or more label values is syntactically invalid or null.  See https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#syntax-and-character-set for details."
  }

  validation {
    condition     = alltrue([for k in keys(var.metadata.labels) : can(regex("^(?i)(([a-z0-9]/)|([a-z0-9][a-z0-9\\-.]{0,251}[a-z0-9])/)?(([a-z0-9])|([a-z0-9]([a-z0-9\\-_.]){0,61}[a-z0-9]))$", k))])
    error_message = "One or more label keys is syntactically invalid or null.  See https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#syntax-and-character-set for details."
  }
}

variable "object_quotas" {
  default     = {}
  description = <<-EOF
  An object whose attributes are used to set resource quotas for API objects in the namespace.
  All attributes are optional.  If an attribute is null, no quota is enforced.
  For more details see https://kubernetes.io/docs/concepts/policy/resource-quotas/#object-count-quota
  EOF
  nullable    = false
  type = object({
    configmaps               = optional(number)
    persistent_volume_claims = optional(number)
    pods                     = optional(number)
    replication_controllers  = optional(number)
    secrets                  = optional(number)
    services                 = optional(number)
  })

  validation {
    condition     = alltrue([for k, v in var.object_quotas : 0 <= v if v != null])
    error_message = "If a quota is defined, it must be greater than or equal to zero."
  }
}

variable "labels" {
  default     = {}
  description = "An optional map of kubernetes labels to attach to every resource created by the module."
  nullable    = false
  type        = map(string)

  validation {
    condition     = alltrue([for v in values(var.labels) : can(regex("^(?i)(([a-z0-9])|([a-z0-9]([a-z0-9\\-_.]){0,61}[a-z0-9]))?$", v))])
    error_message = "One or more label values is syntactically invalid or null.  See https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#syntax-and-character-set for details."
  }

  validation {
    condition     = alltrue([for k in keys(var.labels) : can(regex("^(?i)(([a-z0-9]/)|([a-z0-9][a-z0-9\\-.]{0,251}[a-z0-9])/)?(([a-z0-9])|([a-z0-9]([a-z0-9\\-_.]){0,61}[a-z0-9]))$", k))])
    error_message = "One or more label keys is syntactically invalid or null.  See https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#syntax-and-character-set for details."
  }
}

